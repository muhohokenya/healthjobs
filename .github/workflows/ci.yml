name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  php-tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, dom, sqlite, pdo_sqlite
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Prepare environment
        run: |
          cp .env.example .env
          touch database/database.sqlite
          php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --graceful --force

      - name: Run tests (Pest)
        run: php artisan test

  js-build:
    name: JS Build
    runs-on: ubuntu-latest
    needs: php-tests
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [php-tests, js-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deployment placeholder
        run: |
          echo "All previous jobs succeeded. Implement your deployment steps here (e.g., rsync/SSH, Laravel Forge, Envoy, or GitHub Deployments)."
