name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read

jobs:
  php-tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, dom, sqlite, pdo_sqlite
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Prepare environment
        run: |
          cp .env.example .env
          touch database/database.sqlite
          php artisan key:generate

      - name: Run migrations
        run: php artisan migrate --graceful --force

      - name: Run tests (Pest)
        run: php artisan test

  js-build:
    name: JS Build
    runs-on: ubuntu-latest
    needs: php-tests
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build assets
        run: npm run build

      - name: Upload Vite build (client)
        uses: actions/upload-artifact@v4
        with:
          name: vite-build
          if-no-files-found: error
          retention-days: 7
          path: public/build

      - name: Upload SSR build (optional)
        uses: actions/upload-artifact@v4
        with:
          name: vite-ssr
          if-no-files-found: ignore
          retention-days: 7
          path: bootstrap/ssr

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [php-tests, js-build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download vite-build artifact
        uses: actions/download-artifact@v4
        with:
          name: vite-build
          path: ./artifact

      - name: Download vite-ssr artifact (optional)
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: vite-ssr
          path: ./artifact

      - name: Check deployment secrets
        if: ${{ !secrets.SERVER_HOST || !secrets.SERVER_USER || !secrets.SSH_PRIVATE_KEY || !secrets.SERVER_PATH }}
        run: |
          echo "Deployment skipped: Missing one or more required secrets (SERVER_HOST, SERVER_USER, SERVER_PATH, SSH_PRIVATE_KEY)."
          echo "Artifacts downloaded to ./artifact. Configure secrets to enable automatic syncing."

      - name: Setup SSH agent
        if: ${{ secrets.SERVER_HOST && secrets.SERVER_USER && secrets.SSH_PRIVATE_KEY && secrets.SERVER_PATH }}
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add remote host to known_hosts
        if: ${{ secrets.SERVER_HOST && secrets.SERVER_USER && secrets.SSH_PRIVATE_KEY && secrets.SERVER_PATH }}
        run: |
          ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}

      - name: Create remote directories
        if: ${{ secrets.SERVER_HOST && secrets.SERVER_USER && secrets.SSH_PRIVATE_KEY && secrets.SERVER_PATH }}
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p ${{ secrets.SERVER_PATH }}/public/build ${{ secrets.SERVER_PATH }}/bootstrap/ssr"

      - name: Rsync public/build to server
        if: ${{ secrets.SERVER_HOST && secrets.SERVER_USER && secrets.SSH_PRIVATE_KEY && secrets.SERVER_PATH }}
        run: |
          rsync -az --delete ./artifact/public/build/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/public/build/

      - name: Rsync SSR files (if present)
        if: ${{ secrets.SERVER_HOST && secrets.SERVER_USER && secrets.SSH_PRIVATE_KEY && secrets.SERVER_PATH }}
        run: |
          if [ -d "./artifact/bootstrap/ssr" ]; then
            rsync -az --delete ./artifact/bootstrap/ssr/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}/bootstrap/ssr/
          else
            echo "No SSR files to sync (./artifact/bootstrap/ssr not found)."
          fi
